services:
    serverroom-web:
        container_name: serverroom-web
        image: local/serverroom-web
        ports:
            - 8080:80
        networks:
            - network
    serverroom-api:
        container_name: serverroom-api
        image: local/serverroom-api
        ports:
            - 8081:81
        networks:
            - network
    serverroom-generator:
        container_name: serverroom-generator
        image: local/serverroom-generator
        ports:
            - 8082:82
        networks:
            - network
    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: rabbitmq
        volumes:
            - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
            - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
            - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
        environment:
            RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
        ports:
            - 5672:5672
            - 15672:15672
        networks:
            - network
    mongodb:
        image : mongo:5.0
        container_name: mongodb
        environment:
            MONGO_INITDB_DATABASE: server-db
            MONGO_INITDB_ROOT_USERNAME: admin1
            MONGO_INITDB_ROOT_PASSWORD: password1
        volumes:
        - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
        - ./MongoDB:/data/db
        ports:
        - 27017:27017
        restart: unless-stopped
networks:
  network: {}